name: Build Docker

on:
  schedule:
    - cron: "0 0 * * *"
  repository_dispatch:
  workflow_dispatch:
    inputs:
      path_dockerfile:
        description: "dockerfile path in repo"
        required: true
        default: "Dockerfile"
        type: string
      package_app:
        description: "Input package"
        required: true
        default: "baidunetdisk"
        type: string
      arch_branch:
        description: "Input arch"
        required: true
        default: "linux/amd64,linux/arm64"
        type: string
      dockerhub_repo:
        description: "Docker Hub repository"
        required: true
        default: "grinch27/baidunetdisk"
        type: string

env:
  TZ: UTC
  path_dockerfile: ${{ inputs.path_dockerfile || 'Dockerfile' }}
  package_app: ${{ inputs.package_app || 'baidunetdisk' }}
  arch_branch: ${{ inputs.arch_branch || 'linux/amd64,linux/arm64' }}
  dockerhub_repo: ${{ inputs.dockerhub_repo || 'grinch27/baidunetdisk' }}

jobs:
  build:
    name: Build Docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    # if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}
    steps:
      - name: Checkout DIY
        uses: actions/checkout@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: ${{ env.arch_branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Log in to Docker Hub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get package version
        id: ver
        working-directory: /
        env:
          PACKAGE_SOURCE_URL: "https://pkg-ant.baidu.com/"
        run: |
          echo -e "Current working directory: $(pwd)"

          # 定义正则表达式
          regex_chunk_common='https://nd-static.bdstatic.com/m-static/wp-brand/js/chunk-common.[^/]+?\.js'
          regex_linux_guanjia='https://issuepcdn.baidupcs.com/issue/netdisk/LinuxGuanjia/.[^/]+?/'

          # 第一步：请求网址，并搜寻 chunk-common
          chunk_common_url=$(curl -s ${{ env.PACKAGE_SOURCE_URL }} | grep -oP $regex_chunk_common | head -n 1)

          if [ -z "$chunk_common_url" ]; then
            echo "Chunk common URL not found"
            exit 1
          fi

          echo "Chunk common URL: $chunk_common_url"

          # 第二步：请求找到的 chunk-common，搜寻 LinuxGuanjia 含有 deb 后缀
          linux_guanjia_url=$(curl -s $chunk_common_url | grep -oP $regex_linux_guanjia | head -n 1)

          if [ -z "$linux_guanjia_url" ]; then
            echo "Linux Guanjia URL not found"
            exit 1
          fi

          echo "Linux Guanjia URL: $linux_guanjia_url"

          echo "status=success" >> ${GITHUB_OUTPUT}
